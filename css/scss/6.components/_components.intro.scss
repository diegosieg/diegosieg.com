/**
 * COMPONENTS. INTRO
 *
 * @description : Test
 *
 */

 .c-intro {
    .glitch {
        font-size: rem(60);
    }
 }

.c-intro-title {
    font-size: rem(60);
    line-height: $base-line-height * 3;
}

@include breakpoint($sm) {
    .c-intro {
        .glitch {
            font-size: rem(75);
        }
    }

    .c-intro-title {
        font-size: rem(75);
        line-height: $base-line-height * 3.5;
    }
}

@include breakpoint($md) {
    .c-intro {
        .glitch {
            font-size: rem(90);
        }
    }

    .c-intro-title {
        font-size: rem(90);
        line-height: $base-line-height * 4;
    }
}

 .c-intro-columns {
    padding: 4rem 0;
    padding-left: 6px;
    p {
        font-family: $serif;
        font-size: rem(20);
        line-height: 1.4;
    }
    @media(max-width: $sm) {
        padding-left: 0 !important;
        padding-right: 0 !important;
        padding-bottom: 0;
    }
 }

.c-intro-photo {
    margin-top: 2.5rem;
    border-radius: 50%;
    clip-path: polygon(30% -30%, 100% 50%, 50% 100%, 0% 50%);
    transition: all .3s ease-in-out;
    &:hover {
        clip-path: polygon(80% -10%, 80% 70%, 20% 80%, -50% 40%);
    }
}

 .c-intro-keypoints__list {
     display: inline-block;
     padding-bottom: 4rem;
 }

.c-intro-keypoints__item {
    border-bottom: 4px solid $gamma;
    display: inline-block;
    font-size: 1.8em;
    margin-right: 2rem;
    padding-bottom: .2rem;
    padding-top: 4rem;
	@include breakpoint($sm){
        border-bottom: 6px solid $gamma;
		font-size: 2.4em;
	}
	@include breakpoint($lg){
        border-bottom: 12px solid $gamma;
		font-size: 4em;
	}
    &:hover {
        border-color: $beta;
        color: #424242;
        transition: all .5s ease-in-out;
    }
 }



//  Glich
.glitch {
    color: black;
    display: inline-block;
    font-size: rem(60);
    position: relative;
    width: auto;
    margin: 0 auto;
    &:after {
        content: attr(data-text);
        position: absolute;
        left: 2px;
        right: -2px;
        text-shadow: -1px 0 red;
        top: 0;
        color: black;
        background: white;
        overflow: hidden;
        clip: rect(0, 900px, 0, 0);
        animation: noise-anim 2s infinite linear alternate-reverse;
    }
    &:before {
        content: attr(data-text);
        position: absolute;
        left: -2px;
        right: 2px;
        text-shadow: 1px 0 blue;
        top: 0;
        color: black;
        background: white;
        overflow: hidden;
        clip: rect(0, 900px, 0, 0);
        animation: noise-anim-2 3s infinite linear alternate-reverse;
    }
}


@keyframes noise-anim {
    $steps: 20;
    @for $i from 0 through $steps {
        #{percentage($i*(1/$steps))} {
            clip: rect(random(100)+px, 9999px, random(100)+px, 0);
        }
    }
}

@keyframes noise-anim-2 {
    $steps: 20;
    @for $i from 0 through $steps {
        #{percentage($i*(1/$steps))} {
            clip: rect(random(100)+px, 9999px, random(100)+px, 0);
        }
    }
}

